flower_data_apr <- fread("april_june.csv", header = TRUE)
#line below ensures column is date and ordered
#flower_data$Txn_Date <- as.Date(flower_data$Txn_Date, format = "%m/%d/%Y")
#flower_data_apr$Day <- as.Date(flower_data_apr$Day, format = "%m/%d/%Y")
#Since there are multiple sales on a given day, I want to aggregate the sales based on the date
date_net <- aggregate(Net ~ Txn_Date, flower_data,sum)
date2_net <- aggregate(Net ~ Date, flower_data_apr,sum)
View(flower_data_apr)
#Since there are multiple sales on a given day, I want to aggregate the sales based on the date
date_net <- aggregate(Net ~ Txn_Date, flower_data,sum)
colnames(date2_net)[6] <- "Net"
colnames(flower_data_apr)[6] <- "Net"
date2_net <- aggregate(Net ~ Day, flower_data_apr,sum)
library('plyr')
library('bit64')
library('dplyr')
library('reshape2')
library('ggplot2')
setwd("C:/Users/Holex/Desktop/Stats_Project")
#Sidenote: I saved excel file as a txt before reading it as a table
flower_data <- read.table("flower_data.txt", header = TRUE)
flower_data_apr <- fread("april_june.csv", header = TRUE)
#line below ensures column is date and ordered
#flower_data$Txn_Date <- as.Date(flower_data$Txn_Date, format = "%m/%d/%Y")
#flower_data_apr$Day <- as.Date(flower_data_apr$Day, format = "%m/%d/%Y")
#Since there are multiple sales on a given day, I want to aggregate the sales based on the date
date_net <- aggregate(Net ~ Txn_Date, flower_data,sum)
colnames(flower_data_apr)[6] <- "Net"
date2_net <- aggregate(Net ~ Day, flower_data_apr,sum)
#renaming columns to make joining easier later
colnames(date2_net)[2] <- "Net"
colnames(date2_net)[1] <- "Date"
#read in financial data
stock_info <- fread("stockdata.csv")
stock_info2 <- fread("april_june_finance.csv")
#change column name so i can do a join
colnames(date_net)[1] <- "Date"
combodata <- join(date_net,stock_info, type="right")
combodata2 <- join(date2_net, stock_info2, type="right")
#plots the closing price and net for a given day
data_m <- melt(combodata,id.vars = "Date")
ggplot(data_m, aes(Date,value, col=variable)) + geom_point() + stat_smooth()
#plot flower sales against close of s&p
plot(combodata$Close, combodata$Net)
library('plyr')
library('bit64')
library('dplyr')
library('reshape2')
library('ggplot2')
setwd("C:/Users/Holex/Desktop/Stats_Project")
#Sidenote: I saved excel file as a txt before reading it as a table
flower_data <- read.table("flower_data.txt", header = TRUE)
flower_data_apr <- fread("april_june.csv", header = TRUE)
#line below ensures column is date and ordered
flower_data$Txn_Date <- as.Date(flower_data$Txn_Date, format = "%m/%d/%Y")
flower_data_apr$Day <- as.Date(flower_data_apr$Day, format = "%m/%d/%Y")
#Since there are multiple sales on a given day, I want to aggregate the sales based on the date
date_net <- aggregate(Net ~ Txn_Date, flower_data,sum)
colnames(flower_data_apr)[6] <- "Net"
date2_net <- aggregate(Net ~ Day, flower_data_apr,sum)
#renaming columns to make joining easier later
colnames(date2_net)[2] <- "Net"
colnames(date2_net)[1] <- "Date"
#read in financial data
stock_info <- fread("stockdata.csv")
stock_info2 <- fread("april_june_finance.csv")
#change column name so i can do a join
colnames(date_net)[1] <- "Date"
combodata <- join(date_net,stock_info, type="right")
combodata2 <- join(date2_net, stock_info2, type="right")
#plots the closing price and net for a given day
data_m <- melt(combodata,id.vars = "Date")
ggplot(data_m, aes(Date,value, col=variable)) + geom_point() + stat_smooth()
#plot flower sales against close of s&p
plot(combodata$Close, combodata$Net)
plot(combodata$Open, combodata$Net)
View(combodata2)
View(date2_net)
View(combodata)
View(combodata2)
combodata2 <- join(date2_net, stock_info2, type="right")
combodata2 <- join(date2_net, stock_info2)
View(combodata)
combodata2 <- join(date2_net, stock_info2, type = "right")
combodata2 <- join(date2_net, stock_info2, type = "outter")
combodata2 <- join(date2_net, stock_info2, type = "full")
combodata2 <- join(date2_net, stock_info2, type = "right")
View(combodata2)
#combodata2 <- join(date2_net, stock_info2, type = "right")
combo3 <- merge(x = date2_net, y = stock_info2, by = "Date", all.x=TRUE)
View(combo3)
#combodata2 <- join(date2_net, stock_info2, type = "right")
combo3 <- merge(x = date2_net, y = stock_info2, by = "Date", all.y=TRUE)
View(combo3)
#combodata2 <- join(date2_net, stock_info2, type = "right")
combo3 <- merge(x = date2_net, y = stock_info2, by = "Date")
#combodata2 <- join(date2_net, stock_info2, type = "right")
combo3 <- merge(x = date2_net, y = stock_info2, by = "Date", all)
#combodata2 <- join(date2_net, stock_info2, type = "right")
combo3 <- merge(x = date2_net, y = stock_info2, by = "Date", all= TRUE)
View(combo3)
library('plyr')
library('bit64')
library('dplyr')
library('reshape2')
library('ggplot2')
setwd("C:/Users/Holex/Desktop/Stats_Project")
#Sidenote: I saved excel file as a txt before reading it as a table
flower_data <- read.table("flower_data.txt", header = TRUE)
flower_data_apr <- fread("april_june.csv", header = TRUE)
#line below ensures column is date and ordered
flower_data$Txn_Date <- as.Date(flower_data$Txn_Date, format = "%m/%d/%Y")
flower_data_apr$Day <- as.Date(flower_data_apr$Day, format = "%m/%d/%Y")
#Since there are multiple sales on a given day, I want to aggregate the sales based on the date
date_net <- aggregate(Net ~ Txn_Date, flower_data,sum)
colnames(flower_data_apr)[6] <- "Net"
date2_net <- aggregate(Net ~ Day, flower_data_apr,sum)
#renaming columns to make joining easier later
#colnames(date2_net)[2] <- "Net"
colnames(date2_net)[1] <- "Date"
#read in financial data
stock_info <- fread("stockdata.csv")
stock_info2 <- fread("april_june_finance.csv")
#change column name so i can do a join
colnames(date_net)[1] <- "Date"
combodata <- join(date_net,stock_info, type="right")
combodata2 <- join(date2_net, stock_info2, type = "right")
#combo3 <- merge(x = date2_net, y = stock_info2, by = "Date", all= TRUE)
#plots the closing price and net for a given day
data_m <- melt(combodata,id.vars = "Date")
ggplot(data_m, aes(Date,value, col=variable)) + geom_point() + stat_smooth()
#plot flower sales against close of s&p
plot(combodata$Close, combodata$Net)
plot(combodata$Open, combodata$Net)
View(combodata2)
stock_info2$Date <- as.Date(stock_info2$Date, format = "%m/%d/%Y")
library('plyr')
library('bit64')
library('dplyr')
library('reshape2')
library('ggplot2')
setwd("C:/Users/Holex/Desktop/Stats_Project")
#Sidenote: I saved excel file as a txt before reading it as a table
flower_data <- read.table("flower_data.txt", header = TRUE)
flower_data_apr <- fread("april_june.csv", header = TRUE)
#line below ensures column is date and ordered
flower_data$Txn_Date <- as.Date(flower_data$Txn_Date, format = "%m/%d/%Y")
flower_data_apr$Day <- as.Date(flower_data_apr$Day, format = "%m/%d/%Y")
#Since there are multiple sales on a given day, I want to aggregate the sales based on the date
date_net <- aggregate(Net ~ Txn_Date, flower_data,sum)
colnames(flower_data_apr)[6] <- "Net"
date2_net <- aggregate(Net ~ Day, flower_data_apr,sum)
#renaming columns to make joining easier later
#colnames(date2_net)[2] <- "Net"
colnames(date2_net)[1] <- "Date"
#read in financial data
stock_info <- fread("stockdata.csv")
stock_info2 <- fread("april_june_finance.csv")
stock_info2$Date <- as.Date(stock_info2$Date, format = "%m/%d/%Y")
#change column name so i can do a join
colnames(date_net)[1] <- "Date"
combodata <- join(date_net,stock_info, type="right")
combodata2 <- join(date2_net, stock_info2, type = "right")
#combo3 <- merge(x = date2_net, y = stock_info2, by = "Date", all= TRUE)
#plots the closing price and net for a given day
data_m <- melt(combodata,id.vars = "Date")
ggplot(data_m, aes(Date,value, col=variable)) + geom_point() + stat_smooth()
#plot flower sales against close of s&p
plot(combodata$Close, combodata$Net)
plot(combodata$Open, combodata$Net)
#new plot
plot(combodata2$Open,combodata2$Net)
#bind 2 data frames (data from april-june and sep-oct)
results <- rbind(combodata2, combodata)
str(combodata)
str(combodata2)
str(combodata)
str(combodata)
str(combodata2)
library('plyr')
library('bit64')
library('dplyr')
library('reshape2')
library('ggplot2')
setwd("C:/Users/Holex/Desktop/Stats_Project")
#Sidenote: I saved excel file as a txt before reading it as a table
flower_data <- read.table("flower_data.txt", header = TRUE)
flower_data_apr <- fread("april_june.csv", header = TRUE)
#line below ensures column is date and ordered
flower_data$Txn_Date <- as.Date(flower_data$Txn_Date, format = "%m/%d/%Y")
flower_data_apr$Day <- as.Date(flower_data_apr$Day, format = "%m/%d/%Y")
#Since there are multiple sales on a given day, I want to aggregate the sales based on the date
date_net <- aggregate(Net ~ Txn_Date, flower_data,sum)
colnames(flower_data_apr)[6] <- "Net"
date2_net <- aggregate(Net ~ Day, flower_data_apr,sum)
#renaming columns to make joining easier later
#colnames(date2_net)[2] <- "Net"
colnames(date2_net)[1] <- "Date"
#read in financial data
stock_info <- fread("stockdata.csv")
stock_info$Date <- as.Date(stock_info$Date, format = "%m/%d/%Y")
stock_info2 <- fread("april_june_finance.csv")
stock_info2$Date <- as.Date(stock_info2$Date, format = "%m/%d/%Y")
#change column name so i can do a join
colnames(date_net)[1] <- "Date"
combodata <- join(date_net,stock_info, type="right")
combodata2 <- join(date2_net, stock_info2, type = "right")
#combo3 <- merge(x = date2_net, y = stock_info2, by = "Date", all= TRUE)
#plots the closing price and net for a given day
data_m <- melt(combodata,id.vars = "Date")
ggplot(data_m, aes(Date,value, col=variable)) + geom_point() + stat_smooth()
library('plyr')
library('bit64')
library('dplyr')
library('reshape2')
library('ggplot2')
setwd("C:/Users/Holex/Desktop/Stats_Project")
#Sidenote: I saved excel file as a txt before reading it as a table
flower_data <- read.table("flower_data.txt", header = TRUE)
flower_data_apr <- fread("april_june.csv", header = TRUE)
#line below ensures column is date and ordered
flower_data$Txn_Date <- as.Date(flower_data$Txn_Date, format = "%m/%d/%Y")
flower_data_apr$Day <- as.Date(flower_data_apr$Day, format = "%m/%d/%Y")
#Since there are multiple sales on a given day, I want to aggregate the sales based on the date
date_net <- aggregate(Net ~ Txn_Date, flower_data,sum)
colnames(flower_data_apr)[6] <- "Net"
date2_net <- aggregate(Net ~ Day, flower_data_apr,sum)
#renaming columns to make joining easier later
#colnames(date2_net)[2] <- "Net"
colnames(date2_net)[1] <- "Date"
#read in financial data
stock_info <- fread("stockdata.csv")
stock_info$Date <- as.Date(stock_info$Date, format = "%m/%d/%Y")
stock_info2 <- fread("april_june_finance.csv")
stock_info2$Date <- as.Date(stock_info2$Date, format = "%m/%d/%Y")
#change column name so i can do a join
colnames(date_net)[1] <- "Date"
combodata <- join(date_net,stock_info, type="right")
combodata2 <- join(date2_net, stock_info2, type = "right")
#combo3 <- merge(x = date2_net, y = stock_info2, by = "Date", all= TRUE)
#plots the closing price and net for a given day
data_m <- melt(combodata,id.vars = "Date")
#ggplot(data_m, aes(Date,value, col=variable)) + geom_point() + stat_smooth()
#plot flower sales against close of s&p
plot(combodata$Close, combodata$Net)
library('plyr')
library('bit64')
library('dplyr')
library('reshape2')
library('ggplot2')
setwd("C:/Users/Holex/Desktop/Stats_Project")
#Sidenote: I saved excel file as a txt before reading it as a table
flower_data <- read.table("flower_data.txt", header = TRUE)
flower_data_apr <- fread("april_june.csv", header = TRUE)
#line below ensures column is date and ordered
flower_data$Txn_Date <- as.Date(flower_data$Txn_Date, format = "%m/%d/%Y")
flower_data_apr$Day <- as.Date(flower_data_apr$Day, format = "%m/%d/%Y")
#Since there are multiple sales on a given day, I want to aggregate the sales based on the date
date_net <- aggregate(Net ~ Txn_Date, flower_data,sum)
colnames(flower_data_apr)[6] <- "Net"
date2_net <- aggregate(Net ~ Day, flower_data_apr,sum)
#renaming columns to make joining easier later
#colnames(date2_net)[2] <- "Net"
colnames(date2_net)[1] <- "Date"
#read in financial data
stock_info <- fread("stockdata.csv")
stock_info2 <- fread("april_june_finance.csv")
stock_info2$Date <- as.Date(stock_info2$Date, format = "%m/%d/%Y")
#change column name so i can do a join
colnames(date_net)[1] <- "Date"
combodata <- join(date_net,stock_info, type="right")
combodata2 <- join(date2_net, stock_info2, type = "right")
#combo3 <- merge(x = date2_net, y = stock_info2, by = "Date", all= TRUE)
#plots the closing price and net for a given day
data_m <- melt(combodata,id.vars = "Date")
ggplot(data_m, aes(Date,value, col=variable)) + geom_point() + stat_smooth()
#plot flower sales against close of s&p
plot(combodata$Close, combodata$Net)
plot(combodata$Open, combodata$Net)
#new plot
plot(combodata2$Open,combodata2$Net)
#bind 2 data frames (data from april-june and sep-oct)
results <- rbind(combodata2, combodata)
combodata2$Date <- as.character(combodata2$Date)
#bind 2 data frames (data from april-june and sep-oct)
results <- rbind(combodata2, combodata)
View(results)
plot(results$Open, results$Net)
plot(results$Cloes, results$Net)
plot(results$Close, results$Net)
plot(results$High, results$Net)
plot(results$`Adj Close`, results$Net)
plot(results$Low, results$Net)
plot(results$Volume, results$Net)
plot(results$`Adj Close`, results$Net)
l.model <- (results$Net ~ results$`Adj Close`)
summary(l.model)
l.model <- lm(results$Net ~ results$`Adj Close`)
summary(l.model)
#plot against residuals
plot(l.model$fitted.values, l.model$residuals)
plot(results$`Adj Close`, results$Net)
#plot against residuals
plot(l.model$fitted.values, l.model$residuals)
summary(l.model)
qqnorm(rstandard(l.model))
plot(results$`Adj Close`, results$Net)
#plot against residuals
plot(l.model$fitted.values, l.model$residuals)
qqnorm(rstandard(l.model))
qqline(rstandard(l.model))
qqnorm(rstandard(l.model))
qqline(rstandard(l.model))
library('plyr')
library('bit64')
library('dplyr')
library('reshape2')
library('ggplot2')
setwd("C:/Users/Holex/Desktop/Stats_Project")
#Sidenote: I saved excel file as a txt before reading it as a table
flower_data <- read.table("flower_data.txt", header = TRUE)
flower_data_apr <- fread("april_june.csv", header = TRUE)
#line below ensures column is date and ordered
flower_data$Txn_Date <- as.Date(flower_data$Txn_Date, format = "%m/%d/%Y")
flower_data_apr$Day <- as.Date(flower_data_apr$Day, format = "%m/%d/%Y")
#Since there are multiple sales on a given day, I want to aggregate the sales based on the date
date_net <- aggregate(Net ~ Txn_Date, flower_data,sum)
colnames(flower_data_apr)[6] <- "Net"
date2_net <- aggregate(Net ~ Day, flower_data_apr,sum)
#renaming columns to make joining easier later
#colnames(date2_net)[2] <- "Net"
colnames(date2_net)[1] <- "Date"
#read in financial data
stock_info <- fread("stockdata.csv")
stock_info2 <- fread("april_june_finance.csv")
stock_info2$Date <- as.Date(stock_info2$Date, format = "%m/%d/%Y")
#change column name so i can do a join
colnames(date_net)[1] <- "Date"
combodata <- join(date_net,stock_info, type="right")
combodata2 <- join(date2_net, stock_info2, type = "right")
combodata2$Date <- as.character(combodata2$Date)
#combo3 <- merge(x = date2_net, y = stock_info2, by = "Date", all= TRUE)
#plots the closing price and net for a given day
data_m <- melt(combodata,id.vars = "Date")
ggplot(data_m, aes(Date,value, col=variable)) + geom_point() + stat_smooth()
#plot flower sales against close of s&p
plot(combodata$Close, combodata$Net)
plot(combodata$Open, combodata$Net)
#new plot
plot(combodata2$Open,combodata2$Net)
#bind 2 data frames (data from april-june and sep-oct)
results <- rbind(combodata2, combodata)
plot(results$Open, results$Net)
plot(results$Close, results$Net)
plot(results$High, results$Net)
plot(results$`Adj Close`, results$Net)
plot(results$Low, results$Net)
plot(results$Volume, results$Net)
l.model <- lm(results$Net ~ results$`Adj Close`)
summary(l.model)
#plot against residuals
plot(l.model$fitted.values, l.model$residuals)
qqnorm(rstandard(l.model))
qqline(rstandard(l.model))
plot(l.model)
plot(results$`Adj Close`, results$Net)
plot(l.model)
plot(results$`Adj Close`, results$Net)
plot(l.model)
plot(results$`Adj Close`, results$Net)
setwd("C:/Users/Holex/Desktop/EDA_Project")
videogame_data <- fread("ign.csv", header = TRUE)
View(videogame_data)
plot(videogame_data$release_year, videogame_data$title)
plot(videogame_data$release_year, videogame_data$score)
hist(videogame_data$release_year)
library("ggplot2")
ggplot(videogame_data$release_year) + geom_histogram()
ggplot(videogame_data$release_year, geom= "histogram")
ggplot(data=videogame_data, aes(videogame_data$release_year)) +
geom_histogram()
library("ggplot2")
library('data.table')
setwd("C:/Users/Holex/Desktop/EDA_Project")
library("ggplot2")
library('data.table')
#setwd("C:/Users/Holex/Desktop/EDA_Project")
videogame_ratings <- fread("ign.csv")
videogame_sales <- fread("vgrating.csv")
str(videogame_sales)
str(videogame_ratings)
title_year_sales <- videogame_sales[,c(1,2,3,6,7,8,9,10)]
year_sales$`videogame_sales$Year_of_Release` <- as.factor(year_sales$`videogame_sales$Year_of_Release`)
library("ggplot2")
library('data.table')
#setwd("C:/Users/Holex/Desktop/EDA_Project")
videogame_ratings <- fread("ign.csv")
videogame_sales <- fread("vgrating.csv")
str(videogame_sales)
str(videogame_ratings)
title_year_sales <- videogame_sales[,c(1,2,3,6,7,8,9,10)]
title_rating <- videogame_ratings[,c(3,5,6,9)]
colnames(videogame_ratings)[3] <- "Name"
colnames(videogame_ratings)[5] <- "Platform"
colnames(videogame_ratings)[9] <- "Year_of_Release"
title_year_sales$Year_of_Release <- as.integer(title_year_sales$Year_of_Release)
videogame_sales$User_Score <- as.integer(videogame_sales$User_Score)
str(title_year_sales)
merged <- merge(title_year_sales, title_rating, by= c("Name", "Platform", "Year_of_Release"))
library("ggplot2")
library('data.table')
#setwd("C:/Users/Holex/Desktop/EDA_Project")
videogame_ratings <- fread("ign.csv")
videogame_sales <- fread("vgrating.csv")
str(videogame_sales)
str(videogame_ratings)
title_year_sales <- videogame_sales[,c(1,2,3,6,7,8,9,10)]
title_rating <- videogame_ratings[,c(3,5,6,9)]
colnames(videogame_ratings)[3] <- "Name"
colnames(videogame_ratings)[5] <- "Platform"
colnames(videogame_ratings)[9] <- "Year_of_Release"
title_year_sales$Year_of_Release <- as.integer(title_year_sales$Year_of_Release)
videogame_sales$User_Score <- as.integer(videogame_sales$User_Score)
str(title_year_sales)
merged <- merge(title_year_sales, title_rating, by= c(Name, "Platform", "Year_of_Release"))
library("ggplot2")
library('data.table')
#setwd("C:/Users/Holex/Desktop/EDA_Project")
videogame_ratings <- fread("ign.csv")
videogame_sales <- fread("vgrating.csv")
str(videogame_sales)
str(videogame_ratings)
title_year_sales <- videogame_sales[,c(1,2,3,6,7,8,9,10)]
title_rating <- videogame_ratings[,c(3,5,6,9)]
colnames(videogame_ratings)[3] <- "Name"
colnames(videogame_ratings)[5] <- "Platform"
colnames(videogame_ratings)[9] <- "Year_of_Release"
title_year_sales$Year_of_Release <- as.integer(title_year_sales$Year_of_Release)
videogame_sales$User_Score <- as.integer(videogame_sales$User_Score)
str(title_year_sales)
merged <- merge(title_year_sales, title_rating, by= c("Name", "Platform", "Year_of_Release"))
str(title_rating)
str(title_year_sales)
str(title_rating)
library("ggplot2")
library('data.table')
#setwd("C:/Users/Holex/Desktop/EDA_Project")
videogame_ratings <- fread("ign.csv")
videogame_sales <- fread("vgrating.csv")
str(videogame_sales)
str(videogame_ratings)
title_year_sales <- videogame_sales[,c(1,2,3,6,7,8,9,10)]
colnames(videogame_ratings)[3] <- "Name"
colnames(videogame_ratings)[5] <- "Platform"
colnames(videogame_ratings)[9] <- "Year_of_Release"
title_rating <- videogame_ratings[,c(3,5,6,9)]
title_year_sales$Year_of_Release <- as.integer(title_year_sales$Year_of_Release)
videogame_sales$User_Score <- as.integer(videogame_sales$User_Score)
str(title_year_sales)
str(title_rating)
merged <- merge(title_year_sales, title_rating, by= c("Name", "Platform", "Year_of_Release"))
year_sales$`videogame_sales$Year_of_Release` <- as.factor(year_sales$`videogame_sales$Year_of_Release`)
sales_year <- ggplot(data = year_sales, aes(x=year_sales$`videogame_sales$Year_of_Release`, y= year_sales$`videogame_sales$Global_Sales`)) + geom_bar()
library("ggplot2")
library('data.table')
setwd("C:/Users/Holex/Desktop/EDA_Project")
library("ggplot2")
library('data.table')
#setwd("C:/Users/Holex/Desktop/EDA_Project")
videogame_ratings <- fread("ign.csv")
videogame_sales <- fread("vgrating.csv")
str(videogame_sales)
str(videogame_ratings)
title_year_sales <- videogame_sales[,c(1,2,3,6,7,8,9,10)]
title_rating <- videogame_ratings[,c(3,5,6,9)]
colnames(videogame_ratings)[3] <- "Name"
colnames(videogame_ratings)[5] <- "Platform"
colnames(videogame_ratings)[9] <- "Year_of_Release"
title_year_sales$Year_of_Release <- as.integer(title_year_sales$Year_of_Release)
videogame_sales$User_Score <- as.integer(videogame_sales$User_Score)
str(title_year_sales)
#merged <- merge(title_year_sales, title_rating, by= c("Name", "Platform", "Year_of_Release"))
#sales by year
ploty <- ggplot(data = videogame_sales, aes(x=Year_of_Release, y = Global_Sales)) + geom_bar(stat="identity")
ploty
#by console
nex <-ploty + geom_bar(stat = "identity",aes(fill = videogame_sales$Platform))
nex
#by genre
genre <- ploty + geom_bar(stat = "identity",aes(fill = videogame_sales$Genre)) + coord_flip()
genre
#by rating
mean_rating <- aggregate(videogame_sales$User_Score ~ videogame_sales$Year_of_Release,videogame_sales,mean)
#rating <- ploty + geom_line(mean_rating,aes(x= mean_rating$`videogame_sales$Year_of_Release`, y=mean_rating$`videogame_sales$User_Score`))
rating_metacritic <- ggplot(data = mean_rating, aes(x=mean_rating$`videogame_sales$Year_of_Release`, y= mean_rating$`videogame_sales$User_Score`)) + geom_bar(stat="identity")
rating_metacritic
str(title_year_sales)
str(videogame_sales)
head(videogame_sales$Platform)
(videogame_sales$Platform)
str(videogame_sales)
global_sales_per_platform <- videogame_sales[,sum(Global_Sales),by="Platform"]
global_sales_per_platform
(global_sales_per_platform[order(global_sales_per_platform$V1)])
(global_sales_per_platform[order(global_sales_per_platform$V1, reverse=TRUE)])
?order
(global_sales_per_platform[order(-global_sales_per_platform$V1)])
str(videogame_sales)
sales_since_08 <- subset(videogame_sales, Year_of_Release >= "2008")
str(sales_since_08)
globalsales_since_08 <- sales_since_08[,sum(Global_Sales), by="Platform"]
(globalsales_since_08[order(-globalsales_since_08$V1)])
