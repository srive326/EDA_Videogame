beeswarm(authors_by_year$count ~ authors_by_year$year)
str(authors_by_year)
ggplot(data = authors_by_year, aes(x=year, y = count)) + geom_bar(stat="identity")
str(new_videogame_ratings)
ggplot(data = new_videogame_ratings, aes(x=year, y = word_count)) + geom_violin(stat="identity")
ggplot(new_videogame_ratings, aes(x=year, y=word_count, fill=word_count)) +
geom_violin(trim=FALSE) + geom_boxplot(width=0.1, fill="white") + labs(title="Perceived Sincerity", x="Self-Reported", y="Partner Rating") + scale_fill_brewer(palette="Spectral", direction = -1) + guides(fill= guide_legend(reverse = TRUE))
ggplot(new_videogame_ratings, aes(x=as.factor(year), y=word_count, fill=word_count)) +
geom_violin(trim=FALSE) + geom_boxplot(width=0.1, fill="white") + labs(title="Perceived Sincerity", x="Self-Reported", y="Partner Rating") + scale_fill_brewer(palette="Spectral", direction = -1) + guides(fill= guide_legend(reverse = TRUE))
ggplot(new_videogame_ratings, aes(x=as.factor(year), y=word_count, fill="identity")) +
geom_violin(trim=FALSE) + geom_boxplot(width=0.1, fill="white") + labs(title="Perceived Sincerity", x="Self-Reported", y="Partner Rating") + scale_fill_brewer(palette="Spectral", direction = -1) + guides(fill= guide_legend(reverse = TRUE))
ggplot(new_videogame_ratings, aes(x=as.factor(year), y=word_count, fill=year)) +
geom_violin(trim=FALSE) + geom_boxplot(width=0.1, fill="white") + labs(title="Perceived Sincerity", x="Self-Reported", y="Partner Rating") + scale_fill_brewer(palette="Spectral", direction = -1) + guides(fill= guide_legend(reverse = TRUE))
ggplot(new_videogame_ratings, aes(x=as.factor(year), y=word_count, fill=as.numeric(year)) +
geom_violin(trim=FALSE) + geom_boxplot(width=0.1, fill="white") + labs(title="Perceived Sincerity", x="Self-Reported", y="Partner Rating") + scale_fill_brewer(palette="Spectral", direction = -1) + guides(fill= guide_legend(reverse = TRUE))
ggplot(new_videogame_ratings, aes(x=as.factor(year), y=word_count, fill=as.numeric(year))) +
ggplot(new_videogame_ratings, aes(x=as.factor(year), y=word_count, fill="identity") +
geom_violin(trim=FALSE) + geom_boxplot(width=0.1, fill="white") + labs(title="Perceived Sincerity", x="Self-Reported", y="Partner Rating") + scale_fill_brewer(palette="Spectral", direction = -1) + guides(fill= guide_legend(reverse = TRUE))
ggplot(new_videogame_ratings, aes(x=as.factor(year), y=word_count, fill="identity")) +
identity
ggplot(new_videogame_ratings, aes(x=as.factor(year), y=word_count, fill="identity")) +
geom_violin(trim=FALSE) + geom_boxplot(width=0.1, fill="white") + labs(title="Perceived Sincerity", x="Self-Reported", y="Partner Rating") + scale_fill_brewer(palette="Spectral", direction = -1) + guides(fill= guide_legend(reverse = TRUE))
ggplot(new_videogame_ratings, aes(x=as.factor(year), y=word_count, fill=as.factor(year))) +
geom_violin(trim=FALSE) + geom_boxplot(width=0.1, fill="white") + labs(title="Perceived Sincerity", x="Self-Reported", y="Partner Rating") + scale_fill_brewer(palette="Spectral", direction = -1) + guides(fill= guide_legend(reverse = TRUE))
ggplot(new_videogame_ratings, aes(x=as.factor(year), y=word_count, fill=as.factor(year))) +
geom_violin(trim=FALSE) + geom_boxplot(width=0.1, fill="white") + labs(title="Review Word Count by Year", x="Year", y="Word Count") + scale_fill_brewer(palette="Identity", direction = -1) + guides(fill= guide_legend(reverse = TRUE))
ggplot(new_videogame_ratings, aes(x=as.factor(year), y=word_count, fill=as.factor(year))) +
geom_violin(trim=FALSE) + geom_boxplot(width=0.1, fill="white") + labs(title="Review Word Count by Year", x="Year", y="Word Count") + scale_fill_brewer(palette="identity", direction = -1) + guides(fill= guide_legend(reverse = TRUE))
ggplot(new_videogame_ratings, aes(x=as.factor(year), y=word_count, fill=word_count)) +
geom_violin(trim=FALSE) + geom_boxplot(width=0.1, fill="white") + labs(title="Review Word Count by Year", x="Year", y="Word Count") + scale_fill_brewer(palette="identity", direction = -1) + guides(fill= guide_legend(reverse = TRUE)) + labs()
ggplot(new_videogame_ratings, aes(x=as.factor(year), y=word_count, fill=as.factor(year))) +
geom_violin(trim=FALSE) + geom_boxplot(width=0.1, fill="white") + labs(title="Review Word Count by Year", x="Year", y="Word Count") + scale_fill_brewer(palette="identity", direction = -1) + guides(fill= guide_legend(reverse = TRUE)) + theme(legend.position = "none")
ggplot(new_videogame_ratings, aes(x=as.factor(year), y=word_count, fill=as.factor(year))) +
geom_violin(trim=FALSE) + geom_boxplot(width=0.1, fill="white") + labs(title="Review Word Count by Year", x="Year", y="Word Count")  + guides(fill= guide_legend(reverse = TRUE)) + theme(legend.position = "none")
merged <- data.frame(original=orig_ratings$release_year, new=new_videogame_ratings$year)
# remove easter egg in original data
orig_ratings <- orig_ratings[orig_ratings$release_year != 1970, ]
#reviews by year
# original data
qplot(orig_ratings$release_year,
geom="histogram",
binwidth = 0.5,
main = "Histogram for Year",
xlab = "Year",
fill=I("blue"),
col=I("red"),
alpha=I(.2))
# newly scraped data
qplot(new_videogame_ratings$year,
geom="histogram",
binwidth = 0.5,
main = "Histogram for Year",
xlab = "Year",
fill=I("blue"),
col=I("red"),
alpha=I(.2))
#beeswarm(new_videogame_ratings$year)
x = c(1996:2017)
x
y1 <- orig_ratings %>% group_by(year) %>% summarise(count = n())
y1 <- orig_ratings %>% group_by(release_year) %>% summarise(count = n())
y1
y2 <- new_videogame_ratings %>% group_by(year) %>% summarise(count = n())
y2
y4 <- new_videogame_ratings %>% group_by(year) %>% summarise(average(word_count))
y4 <- new_videogame_ratings %>% group_by(year) %>% summarise(mean(word_count))
y4
new_videogame_ratings[new_videogame_ratings$year = 2010, ]
new_videogame_ratings[new_videogame_ratings$year == 2010, ]
y4 <- na.omit(new_videogame_ratings) %>% group_by(year) %>% summarise(mean(word_count))
y4
ggplot(na.omit(new_videogame_ratings), aes(x=as.factor(year), y=word_count, fill=as.factor(year))) +
geom_violin(trim=FALSE) + geom_boxplot(width=0.1, fill="white") + labs(title="Review Word Count by Year", x="Year", y="Word Count")  + guides(fill= guide_legend(reverse = TRUE)) + theme(legend.position = "none")
merged <- merge(y1, y2, by.x = "release_year", by.y = "year")
merged
merged <- merge(y1, y2, by.x = "release_year", by.y = "year", all=TRUE)
merged
merged1 <- merge(y2, y1, by.x = "year", by.y = "release_year", all=TRUE)
merged1
merged2 <- merge(merged1, y3, by = "year")
y3 <- authors_by_year
merged2 <- merge(merged1, y3, by = "year")
merged2
merged2 <- merge(merged1, y3, by = "year", all=TRUE)
merged2
merged3 <- merge(merged2, y4, by = "year", all=TRUE)
merged3
merged3 <- merge(merged2, "Average Word Count" =y4, by = "year", all=TRUE)
merged3 <- merge(merged2, y4, by = "year", all=TRUE)
colnames(merged3$count.x) <- "new_reviews"
colnames(merged3)$count.x <- "new_reviews"
colnames(merged3)
colnames(merged3)[2] <- "new_reviews"
colnames(merged3)[3] <- "orig_reviews"
colnames(merged3)[4] <- "author_count"
colnames(merged3)
merged3
meltedmerge <- melt(merged3)
meltedmerge
meltedmerge <- melt(merged3[, c(2, 3, 4, 5)])
meltedmerge
merged3
ggplot(meltedmerge,aes(x=x, fill=variable)) + geom_density(alpha=0.25)
x <- data.frame(v1=rnorm(100),v2=rnorm(100,1,1),v3=rnorm(100,0,2))
library(ggplot2);library(reshape2)
data<- melt(x)
data
ggplot() +
geom_density(data=y1, aes(x=release_year, y=count))
y1
ggplot() +
geom_density(data=y1, aes(x=y1$release_year, y=y1$count))
ggplot() +
geom_line(data=y1, aes(x=y1$release_year, y=y1$count))
ggplot() +
geom_line(data=y1, aes(x=y1$release_year, y=y1$count)) +
geom_line(data=y2, aes(x=y2$year, y=y2$count)) +
ggplot() +
geom_line(data=y1, aes(x=y1$release_year, y=y1$count)) +
geom_line(data=y2, aes(x=y2$year, y=y2$count))
ggplot() +
geom_line(data=y1, aes(x=y1$release_year, y=y1$count)) +
geom_line(data=na.omit(y2), aes(x=y2$year, y=y2$count))
ggplot() +
geom_bar(data=y1, aes(x=y1$release_year, y=y1$count)) +
geom_bar(data=na.omit(y2), aes(x=y2$year, y=y2$count))
ggplot() +
geom_line(data=y1, aes(x=y1$release_year, y=y1$count)) +
geom_line(data=na.omit(y2), aes(x=y2$year, y=y2$count))
y3
ggplot() +
geom_line(data=y1, aes(x=y1$release_year, y=y1$count)) +
geom_line(data=na.omit(y2), aes(x=y2$year, y=y2$count)) +
geom_line(data=na.omit(y3), aes(x=y3$year, y=y3$count)) +
geom_line(data=na.omit(y4), aes(x=y4$year, y=y4$mean(word_count)))
y4
colnames(y4)[2] <- "avg_wc"
ggplot() +
geom_line(data=y1, aes(x=y1$release_year, y=y1$count)) +
geom_line(data=na.omit(y2), aes(x=y2$year, y=y2$count)) +
geom_line(data=na.omit(y3), aes(x=y3$year, y=y3$count)) +
geom_line(data=na.omit(y4), aes(x=y4$year, y=y4$avg_wc))
summarySE(new_videogame_ratings %>% group_by(year))
ggplot() +
geom_area(data=y1, aes(x=y1$release_year, y=y1$count)) +
geom_line(data=na.omit(y2), aes(x=y2$year, y=y2$count)) +
geom_line(data=na.omit(y3), aes(x=y3$year, y=y3$count)) +
geom_line(data=na.omit(y4), aes(x=y4$year, y=y4$avg_wc)) +
geom_errorbar(aes(ymin=len-se, ymax=len+se), width=.1, position=pd)
ggplot() +
geom_area(data=y1, aes(x=y1$release_year, y=y1$count)) +
geom_line(data=na.omit(y2), aes(x=y2$year, y=y2$count)) +
geom_line(data=na.omit(y3), aes(x=y3$year, y=y3$count)) +
geom_line(data=na.omit(y4), aes(x=y4$year, y=y4$avg_wc))
ggplot() +
geom_area(data=y1, aes(x=y1$release_year, y=y1$count), fill="blue", alpha=.2) +
geom_line(data=na.omit(y2), aes(x=y2$year, y=y2$count)) +
geom_line(data=na.omit(y3), aes(x=y3$year, y=y3$count)) +
geom_line(data=na.omit(y4), aes(x=y4$year, y=y4$avg_wc))
ggplot() +
geom_area(data=y1, aes(x=y1$release_year, y=y1$count), fill="dodgerblue3", alpha=.2) +
geom_area(data=na.omit(y2), aes(x=y2$year, y=y2$count), fill="deeppink1", alpha=.2) +
geom_area(data=na.omit(y3), aes(x=y3$year, y=y3$count), fill="springgreen3", alpha=.2) +
geom_area(data=na.omit(y4), aes(x=y4$year, y=y4$avg_wc), fill="darkorange2", alpha=.2)
ggplot() +
geom_area(data=y1, aes(x=y1$release_year, y=y1$count), fill="dodgerblue3", alpha=.2) +
geom_area(data=na.omit(y2), aes(x=y2$year, y=y2$count), fill="deeppink1", alpha=.2) +
geom_area(data=na.omit(y3), aes(x=y3$year, y=y3$count), fill="springgreen3", alpha=.2) +
geom_area(data=na.omit(y4), aes(x=y4$year, y=y4$avg_wc), fill="darkorange2", alpha=.2) +
scale_fill_brewer(palette="Rainbow")
(gaby <- ggplot(na.omit(new_videogame_ratings), aes(x=as.factor(year), y=word_count, fill=as.factor(year))) +
geom_violin(trim=FALSE) + geom_boxplot(width=0.1, fill="white") + labs(title="Review Word Count by Year", x="Year", y="Word Count")  + guides(fill= guide_legend(reverse = TRUE)) + theme(legend.position = "none"))
(gwc <- ggplot(na.omit(new_videogame_ratings), aes(x=as.factor(year), y=word_count, fill=as.factor(year))) +
geom_violin(trim=FALSE) + geom_boxplot(width=0.1, fill="white") + labs(title="Review Word Count by Year", x="Year", y="Word Count")  + guides(fill= guide_legend(reverse = TRUE)) + theme(legend.position = "none"))
(gold <- qplot(orig_ratings$release_year,
geom="histogram",
binwidth = 0.5,
main = "Histogram for Year",
xlab = "Year",
fill=I("blue"),
col=I("red"),
alpha=I(.2)))
(gnew <- qplot(new_videogame_ratings$year,
geom="histogram",
binwidth = 0.5,
main = "Histogram for Year",
xlab = "Year",
fill=I("blue"),
col=I("red"),
alpha=I(.2))()
#beeswarm(new_videogame_ratings$year)
grid.arrange(gold, gnew, gaby, gwc, ncol=1, nrow =4)
(gnew <- qplot(new_videogame_ratings$year,
geom="histogram",
binwidth = 0.5,
main = "Histogram for Year",
xlab = "Year",
fill=I("blue"),
col=I("red"),
alpha=I(.2))()
#beeswarm(new_videogame_ratings$year)
library("ggplot2")
library("ggplot2")
library('data.table')
library('beeswarm')
library('tidyr')
library('dplyr')
# TO DO thoughts - overlay console releases on sales charts
# beeswarm of sales vs year - or violin plot
new_videogame_ratings <- fread("snippetIGNdata.csv")
orig_ratings <- fread("ign.csv")
# to factors
new_videogame_ratings$platform <- as.factor(new_videogame_ratings$platform)
new_videogame_ratings$genre <- as.factor(new_videogame_ratings$genre)
new_videogame_ratings$editors_choice <- as.factor(new_videogame_ratings$editors_choice)
new_videogame_ratings$score_phrase <- as.factor(new_videogame_ratings$score_phrase)
# Fix the format of year
new_videogame_ratings$release_date <- as.Date(new_videogame_ratings$release_date, format = "%B %d, %Y")
new_videogame_ratings <- separate(new_videogame_ratings, release_date, into = c("year", "month", "day"), sep="-")
new_videogame_ratings[, c("year", "day", "month")] <- lapply(new_videogame_ratings[, c("year", "day", "month")], as.numeric)
# remove easter egg in original data
orig_ratings <- orig_ratings[orig_ratings$release_year != 1970, ]
#reviews by year
# original data
(gold <- qplot(orig_ratings$release_year,
geom="histogram",
binwidth = 0.5,
main = "Histogram for Year",
xlab = "Year",
fill=I("blue"),
col=I("red"),
alpha=I(.2)))
# newly scraped data
(gnew <- qplot(new_videogame_ratings$year,
geom="histogram",
binwidth = 0.5,
main = "Histogram for Year",
xlab = "Year",
fill=I("blue"),
col=I("red"),
alpha=I(.2)))
#beeswarm(new_videogame_ratings$year)
# How many review authors have there been per year at IGN
authors_by_year <- new_videogame_ratings %>% group_by(year) %>% summarise(count = n_distinct(author))
(gaby <- ggplot(data = authors_by_year, aes(x=year, y = count)) + geom_bar(stat="identity"))
(gwc <- ggplot(na.omit(new_videogame_ratings), aes(x=as.factor(year), y=word_count, fill=as.factor(year))) +
geom_violin(trim=FALSE) + geom_boxplot(width=0.1, fill="white") + labs(title="Review Word Count by Year", x="Year", y="Word Count")  + guides(fill= guide_legend(reverse = TRUE)) + theme(legend.position = "none"))
grid.arrange(gold, gnew, gaby, gwc, ncol=1, nrow =4)
library('gridExtra')
grid.arrange(gold, gnew, gaby, gwc, ncol=1, nrow =4)
?grid.arrange
gold$theme
ggplot() +
geom_area(data=y1, aes(x=y1$release_year, y=y1$count), fill="dodgerblue3", alpha=.2, xlab="Year") +
geom_area(data=na.omit(y2), aes(x=y2$year, y=y2$count), fill="deeppink1", alpha=.2) +
geom_area(data=na.omit(y3), aes(x=y3$year, y=y3$count), fill="springgreen3", alpha=.2) +
geom_area(data=na.omit(y4), aes(x=y4$year, y=y4$avg_wc), fill="darkorange2", alpha=.2) +
scale_fill_brewer(palette="Rainbow")
library("ggplot2")
library('data.table')
library('beeswarm')
library('tidyr')
library('dplyr')
library('gridExtra')
# TO DO thoughts - overlay console releases on sales charts
# beeswarm of sales vs year - or violin plot
new_videogame_ratings <- fread("snippetIGNdata.csv")
orig_ratings <- fread("ign.csv")
# to factors
new_videogame_ratings$platform <- as.factor(new_videogame_ratings$platform)
new_videogame_ratings$genre <- as.factor(new_videogame_ratings$genre)
new_videogame_ratings$editors_choice <- as.factor(new_videogame_ratings$editors_choice)
new_videogame_ratings$score_phrase <- as.factor(new_videogame_ratings$score_phrase)
# Fix the format of year
new_videogame_ratings$release_date <- as.Date(new_videogame_ratings$release_date, format = "%B %d, %Y")
new_videogame_ratings <- separate(new_videogame_ratings, release_date, into = c("year", "month", "day"), sep="-")
new_videogame_ratings[, c("year", "day", "month")] <- lapply(new_videogame_ratings[, c("year", "day", "month")], as.numeric)
# remove easter egg in original data
orig_ratings <- orig_ratings[orig_ratings$release_year != 1970, ]
#reviews by year
# original data
(gold <- qplot(orig_ratings$release_year,
geom="histogram",
binwidth = 0.5,
main = "Histogram for Year",
xlab = "Year",
fill=I("blue"),
col=I("red"),
alpha=I(.2)))
# newly scraped data
(gnew <- qplot(new_videogame_ratings$year,
geom="histogram",
binwidth = 0.5,
main = "Histogram for Year",
xlab = "Year",
fill=I("blue"),
col=I("red"),
alpha=I(.2)))
#beeswarm(new_videogame_ratings$year)
# How many review authors have there been per year at IGN
authors_by_year <- new_videogame_ratings %>% group_by(year) %>% summarise(count = n_distinct(author))
(gaby <- ggplot(data = authors_by_year, aes(x=year, y = count)) + geom_bar(stat="identity"))
(gwc <- ggplot(na.omit(new_videogame_ratings), aes(x=as.factor(year), y=word_count, fill=as.factor(year))) +
geom_violin(trim=FALSE) + geom_boxplot(width=0.1, fill="white") + labs(title="Review Word Count by Year", x="Year", y="Word Count")  + guides(fill= guide_legend(reverse = TRUE)) + theme(legend.position = "none"))
# combine plots
# x = year
# y1 = count/year from orig
# y2 = count/year from new
# y3 = count of authors/year from new authors_by_year
# y4 = average word count/year from new
x <- c(1996:2017)
y1 <- orig_ratings %>% group_by(release_year) %>% summarise(count = n())
y2 <- new_videogame_ratings %>% group_by(year) %>% summarise(count = n())
y3 <- authors_by_year
y4 <- na.omit(new_videogame_ratings) %>% group_by(year) %>% summarise(mean(word_count))
colnames(y4)[2] <- "avg_wc"
ggplot() +
geom_area(data=y1, aes(x=y1$release_year, y=y1$count), fill="dodgerblue3", alpha=.2) +
geom_area(data=na.omit(y2), aes(x=y2$year, y=y2$count), fill="deeppink1", alpha=.2) +
geom_area(data=na.omit(y3), aes(x=y3$year, y=y3$count), fill="springgreen3", alpha=.2) +
geom_area(data=na.omit(y4), aes(x=y4$year, y=y4$avg_wc), fill="darkorange2", alpha=.2) +
scale_fill_brewer(palette="Rainbow")
grid.arrange(gold, gnew, gaby, gwc, ncol=1, nrow =4)
(gwc <- ggplot(na.omit(new_videogame_ratings), aes(x=as.factor(year), y=word_count, fill=as.factor(year))) +
geom_violin() + geom_boxplot(width=0.1, fill="white") + labs(title="Review Word Count by Year", x="Year", y="Word Count")  + guides(fill= guide_legend(reverse = TRUE)) + theme(legend.position = "none"))
new_videogame_ratings[,new_videogame_ratings$word_count >5000]
new_videogame_ratings[new_videogame_ratings$word_count >5000,]
library("ggplot2")
library('data.table')
library('beeswarm')
library('tidyr')
library('dplyr')
library('gridExtra')
# TO DO thoughts - overlay console releases on sales charts
# beeswarm of sales vs year - or violin plot
# THIS IS NOT THE FULL DATASET
new_snippet <- fread("snippetIGNdata.csv")
orig_ratings <- fread("ign.csv")
# to factors
new_snippet$platform <- as.factor(new_snippet$platform)
new_snippet$genre <- as.factor(new_snippet$genre)
new_snippet$editors_choice <- as.factor(new_snippet$editors_choice)
new_snippet$score_phrase <- as.factor(new_snippet$score_phrase)
# Fix the format of year
new_snippet$release_date <- as.Date(new_snippet$release_date, format = "%B %d, %Y")
new_snippet <- separate(new_snippet, release_date, into = c("year", "month", "day"), sep="-")
new_snippet[, c("year", "day", "month")] <- lapply(new_snippet[, c("year", "day", "month")], as.numeric)
# remove easter egg in original data
orig_ratings <- orig_ratings[orig_ratings$release_year != 1970, ]
#reviews by year
# original data
(gold <- qplot(orig_ratings$release_year,
geom="histogram",
binwidth = 0.5,
main = "Histogram for Year",
xlab = "Year",
fill=I("blue"),
col=I("red"),
alpha=I(.2)))
# newly scraped data
(gnew <- qplot(new_snippet$year,
geom="histogram",
binwidth = 0.5,
main = "Histogram for Year",
xlab = "Year",
fill=I("blue"),
col=I("red"),
alpha=I(.2)))
#beeswarm(new_snippet$year)
# How many review authors have there been per year at IGN
authors_by_year <- new_snippet %>% group_by(year) %>% summarise(count = n_distinct(author))
(gaby <- ggplot(data = authors_by_year, aes(x=year, y = count)) + geom_bar(stat="identity"))
(gwc <- ggplot(na.omit(new_snippet), aes(x=as.factor(year), y=word_count, fill=as.factor(year))) +
geom_violin() + geom_boxplot(width=0.1, fill="white") + labs(title="Review Word Count by Year", x="Year", y="Word Count")  + guides(fill= guide_legend(reverse = TRUE)) + theme(legend.position = "none"))
# combine plots
# x = year
# y1 = count/year from orig
# y2 = count/year from new
# y3 = count of authors/year from new authors_by_year
# y4 = average word count/year from new
y1 <- orig_ratings %>% group_by(release_year) %>% summarise(count = n())
y2 <- new_snippet %>% group_by(year) %>% summarise(count = n())
y3 <- authors_by_year
y4 <- na.omit(new_snippet) %>% group_by(year) %>% summarise(mean(word_count))
colnames(y4)[2] <- "avg_wc"
ggplot() +
geom_area(data=y1, aes(x=y1$release_year, y=y1$count), fill="dodgerblue3", alpha=.2) +
geom_area(data=na.omit(y2), aes(x=y2$year, y=y2$count), fill="deeppink1", alpha=.2) +
geom_area(data=na.omit(y3), aes(x=y3$year, y=y3$count), fill="springgreen3", alpha=.2) +
geom_area(data=na.omit(y4), aes(x=y4$year, y=y4$avg_wc), fill="darkorange2", alpha=.2)
grid.arrange(gold, gnew, gaby, gwc, ncol=1, nrow =4)
full_new_IGN <- fread("basicIGNdata.csv")
full_new_IGN <- fread("basicIGNdata.csv")
full_new_IGN <- fread("basicIGNdata.csv")
full_new_IGN <- fread("basicIGNdata.csv")
full_new_IGN <- fread("basicIGNData.csv")
full_new_IGN <- fread("basicIGNData.csv")
# to factors
full_new_IGN$platform <- as.factor(full_new_IGN$platform)
full_new_IGN$genre <- as.factor(full_new_IGN$genre)
full_new_IGN$editors_choice <- as.factor(full_new_IGN$editors_choice)
full_new_IGN$score_phrase <- as.factor(full_new_IGN$score_phrase)
# Fix the format of year
full_new_IGN$release_date <- as.Date(full_new_IGN$release_date, format = "%B %d, %Y")
full_new_IGN <- separate(full_new_IGN, release_date, into = c("year", "month", "day"), sep="-")
full_new_IGN[, c("year", "day", "month")] <- lapply(full_new_IGN[, c("year", "day", "month")], as.numeric)
newcount <- full_new_snippet %>% group_by(year) %>% summarise(count = n())
newcount <- full_new_IGN %>% group_by(year) %>% summarise(count = n())
ggplot() +
geom_area(data=y1, aes(x=y1$release_year, y=y1$count), fill="dodgerblue3", alpha=.2) +
geom_area(data=na.omit(y2), aes(x=y2$year, y=y2$count), fill="deeppink1", alpha=.2) +
geom_area(data=na.omit(newcount), aes(x=newcount$year, y=newcount$count), fill="deeppink1", alpha=.2)
ggplot() +
geom_area(data=y1, aes(x=y1$release_year, y=y1$count), fill="dodgerblue3", alpha=.2) +
geom_area(data=na.omit(y2), aes(x=y2$year, y=y2$count), fill="deeppink1", alpha=.2) +
geom_area(data=na.omit(newcount), aes(x=newcount$year, y=newcount$count), fill="blue", alpha=.2)
ggplot() +
geom_area(data=y1, aes(x=y1$release_year, y=y1$count), fill="dodgerblue3", alpha=.2) +
#geom_area(data=na.omit(y2), aes(x=y2$year, y=y2$count), fill="deeppink1", alpha=.2) +
geom_area(data=na.omit(newcount), aes(x=newcount$year, y=newcount$count), fill="blue", alpha=.2)
newcount
str(full_new_IGN)
full_new_IGN <- fread("basicIGNData.csv")
str(full_new_IGN)
full_new_IGN <- full_new_IGN[, -c("V9", "V10", "V11")]
str(full_new_IGN)
full_new_IGN <- fread("basicIGNData.csv")
full_new_IGN <- full_new_IGN[, -c("V9", "V10", "V11")]
# to factors
full_new_IGN$platform <- as.factor(full_new_IGN$platform)
full_new_IGN$genre <- as.factor(full_new_IGN$genre)
full_new_IGN$editors_choice <- as.factor(full_new_IGN$editors_choice)
full_new_IGN$score_phrase <- as.factor(full_new_IGN$score_phrase)
# Fix the format of year
full_new_IGN$release_date <- as.Date(full_new_IGN$release_date, format = "%B %d, %Y")
full_new_IGN <- separate(full_new_IGN, release_date, into = c("year", "month", "day"), sep="-")
full_new_IGN[, c("year", "day", "month")] <- lapply(full_new_IGN[, c("year", "day", "month")], as.numeric)
newcount <- full_new_IGN %>% group_by(year) %>% summarise(count = n())
# plot partial data with full basic to see how many we missed/year in the failed full craw3
ggplot() +
geom_area(data=y1, aes(x=y1$release_year, y=y1$count), fill="dodgerblue3", alpha=.2) +
#geom_area(data=na.omit(y2), aes(x=y2$year, y=y2$count), fill="deeppink1", alpha=.2) +
geom_area(data=na.omit(newcount), aes(x=newcount$year, y=newcount$count), fill="blue", alpha=.2)
full_new_IGN
str(full_new_IGN)
full_new_IGN <- fread("basicIGNData.csv")
full_new_IGN <- full_new_IGN[, -c("V9", "V10", "V11")]
full_new_IGN$platform <- as.factor(full_new_IGN$platform)
full_new_IGN$genre <- as.factor(full_new_IGN$genre)
full_new_IGN$editors_choice <- as.factor(full_new_IGN$editors_choice)
full_new_IGN$score_phrase <- as.factor(full_new_IGN$score_phrase)
full_new_IGN$release_date <- as.Date(full_new_IGN$release_date, format = "%B %d, %Y")
str(full_new_IGN)
full_new_IGN <- fread("basicIGNData.csv")
full_new_IGN <- full_new_IGN[, -c("V9", "V10", "V11")]
str(full_new_IGN)
full_new_IGN <- separate(full_new_IGN, release_date, into = c("year", "month", "day"), sep="-")
full_new_IGN[, c("year", "day", "month")] <- lapply(full_new_IGN[, c("year", "day", "month")], as.numeric)
full_new_IGN <- fread("basicIGNData.csv")
full_new_IGN <- full_new_IGN[, -c("V9", "V10", "V11")]
full_new_IGN$platform <- as.factor(full_new_IGN$platform)
full_new_IGN$genre <- as.factor(full_new_IGN$genre)
full_new_IGN$editors_choice <- as.factor(full_new_IGN$editors_choice)
full_new_IGN$score_phrase <- as.factor(full_new_IGN$score_phrase)
full_new_IGN <- separate(full_new_IGN, release_date, into = c("year", "month", "day"), sep="-")
str(full_new_IGN)
full_new_IGN <- fread("basicIGNData.csv")
full_new_IGN <- full_new_IGN[, -c("V9", "V10", "V11")]
full_new_IGN$release_date <- as.Date(full_new_IGN$release_date, format = "%d-%b-%yy")
str(full_new_IGN)
full_new_IGN <- fread("basicIGNData.csv")
full_new_IGN <- full_new_IGN[, -c("V9", "V10", "V11")]
# to factors
full_new_IGN$platform <- as.factor(full_new_IGN$platform)
full_new_IGN$genre <- as.factor(full_new_IGN$genre)
full_new_IGN$editors_choice <- as.factor(full_new_IGN$editors_choice)
full_new_IGN$score_phrase <- as.factor(full_new_IGN$score_phrase)
# Fix the format of year
full_new_IGN$release_date <- as.Date(full_new_IGN$release_date, format = "%d-%b-%y")
full_new_IGN <- separate(full_new_IGN, release_date, into = c("year", "month", "day"), sep="-")
full_new_IGN[, c("year", "day", "month")] <- lapply(full_new_IGN[, c("year", "day", "month")], as.numeric)
newcount <- full_new_IGN %>% group_by(year) %>% summarise(count = n())
# plot partial data with full basic to see how many we missed/year in the failed full craw3
ggplot() +
geom_area(data=y1, aes(x=y1$release_year, y=y1$count), fill="dodgerblue3", alpha=.2) +
#geom_area(data=na.omit(y2), aes(x=y2$year, y=y2$count), fill="deeppink1", alpha=.2) +
geom_area(data=na.omit(newcount), aes(x=newcount$year, y=newcount$count), fill="blue", alpha=.2)
ggplot(xlab="Release Year") +
geom_area(data=y1, aes(x=y1$release_year, y=y1$count), fill="dodgerblue3", alpha=.2) +
#geom_area(data=na.omit(y2), aes(x=y2$year, y=y2$count), fill="deeppink1", alpha=.2) +
geom_area(data=na.omit(newcount), aes(x=newcount$year, y=newcount$count), fill="blue", alpha=.2)
ggplot() +
geom_area(data=y1, aes(x=y1$release_year, y=y1$count), fill="dodgerblue3", alpha=.2) +
geom_area(data=na.omit(y2), aes(x=y2$year, y=y2$count), fill="deeppink1", alpha=.2) +
geom_area(data=na.omit(newcount), aes(x=newcount$year, y=newcount$count), fill="blue", alpha=.2) +
labs(title="Reviews per Year", x="Year", y="Number of IGN Reviews")
ggplot() +
geom_area(data=y1, aes(x=y1$release_year, y=y1$count), fill="dodgerblue3", alpha=.2) +
geom_area(data=na.omit(y2), aes(x=y2$year, y=y2$count), fill="deeppink1", alpha=.2) +
geom_area(data=na.omit(newcount), aes(x=newcount$year, y=newcount$count), fill="blue", alpha=.2) +
labs(title="Reviews per Year", x="Year", y="Number of IGN Reviews") + theme()
ggplot() +
geom_area(data=y1, aes(x=y1$release_year, y=y1$count), fill="dodgerblue3", alpha=.2) +
geom_area(data=na.omit(y2), aes(x=y2$year, y=y2$count), fill="deeppink1", alpha=.2) +
geom_area(data=na.omit(newcount), aes(x=newcount$year, y=newcount$count), fill="blue", alpha=.2) +
labs(title="Reviews per Year", x="Year", y="Number of IGN Reviews") +
scale_fill_brewer(palette = "RdYlBu")
ggplot() +
geom_area(data=y1, aes(x=y1$release_year, y=y1$count), fill="dodgerblue3", alpha=.2) +
#geom_area(data=na.omit(y2), aes(x=y2$year, y=y2$count), fill="deeppink1", alpha=.2) +
geom_area(data=na.omit(newcount), aes(x=newcount$year, y=newcount$count), fill="blue", alpha=.2) +
labs(title="Reviews per Year", x="Year", y="Number of IGN Reviews")
